// <auto-generated />
using System;
using Aminos.Databases.Title.SDEZ;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aminos.Migrations.MaimaiDXDBMigrations
{
    [DbContext(typeof(MaimaiDXDB))]
    [Migration("20231121223204_V3_Fix_SDEZ_Tables")]
    partial class V3_Fix_SDEZ_Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Responses.UserFriendSeasonRanking", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("point")
                        .HasColumnType("INTEGER");

                    b.Property<int>("rank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("recordDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("rewardGet")
                        .HasColumnType("INTEGER");

                    b.Property<int>("seasonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("userName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserFriendSeasonRankings");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.GameCharge", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("chargeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("endDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("orderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("startDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("MaimaiDX_GameCharges");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.GameEvent", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<bool>("enable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("endDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("startDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("MaimaiDX_GameEvents");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.GameRanking", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("point")
                        .HasColumnType("INTEGER");

                    b.Property<string>("userName")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("id");

                    b.ToTable("MaimaiDX_GameRankings");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.User2pPlaylogDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetail1Id")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetail2Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("achievement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("deluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("musicId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("userPlayDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetail1Id");

                    b.HasIndex("UserDetail2Id");

                    b.ToTable("MaimaiDX_User2pPlaylogDetails");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserAct", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<ulong?>("UserActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserActivityId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("kind")
                        .HasColumnType("INTEGER");

                    b.Property<int>("param1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("param2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("param3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("param4")
                        .HasColumnType("INTEGER");

                    b.Property<long>("sortNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserActivityId");

                    b.HasIndex("UserActivityId1");

                    b.ToTable("MaimaiDX_UserActs");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserActivity", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("MaimaiDX_UserActivities");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserCard", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("cardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("cardTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("charaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("endDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("mapId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("startDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserCards");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserCharacter", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("awakening")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("level")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("useCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserCharacters");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserCharge", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("chargeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("purchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("stock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("validDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserCharges");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserChargelog", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("chargeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("clientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("placeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("purchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("regionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserChargelogs");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserCourse", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("bestAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("bestAchievementDate")
                        .HasColumnType("TEXT");

                    b.Property<uint>("bestDeluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("bestDeluxscoreDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("clearDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("courseId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isLastClear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lastPlayDate")
                        .HasColumnType("TEXT");

                    b.Property<uint>("playCount")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("totalAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("totalDeluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("totalRestlife")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserCourses");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserExtendId")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("UserOptionId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserRatingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("accessCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("banState")
                        .HasColumnType("INTEGER");

                    b.Property<int>("classRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("comboCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("compatibleCmVersion")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("contentBit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("courseRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("currentPlayCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("dailyBonusDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("dailyCourseBonusDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("dateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("eventWatchedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstDataVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstGameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstPlayDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstRomVersion")
                        .HasColumnType("TEXT");

                    b.Property<int>("frameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("gradeRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("gradeRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("helpCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("highestRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iconId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("isNetMember")
                        .HasColumnType("INTEGER");

                    b.Property<int>("lastAllNetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lastClientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("lastCountCourse")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lastCountryCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastDataVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastGameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastPairLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("lastPlaceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lastPlaceName")
                        .HasColumnType("TEXT");

                    b.Property<int>("lastPlayCredit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lastPlayDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("lastPlayMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("lastRegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lastRegionName")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastRomVersion")
                        .HasColumnType("TEXT");

                    b.Property<int>("lastSelectCourse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("lastSelectEMoney")
                        .HasColumnType("INTEGER");

                    b.Property<int>("lastSelectTicket")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lastTrialPlayDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("mapStock")
                        .HasColumnType("INTEGER");

                    b.Property<int>("musicRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("partnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("plateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playSyncCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playVsCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("playerNewRating")
                        .HasColumnType("INTEGER");

                    b.Property<long>("playerOldRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("renameCredit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("selectMapId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("titleId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalAdvancedAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalAdvancedDeluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalAdvancedSync")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalAwake")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalBasicAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalBasicDeluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalBasicSync")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalDeluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalExpertAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalExpertDeluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalExpertSync")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalMasterAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalMasterDeluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalMasterSync")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalReMasterAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<long>("totalReMasterDeluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalReMasterSync")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalSync")
                        .HasColumnType("INTEGER");

                    b.Property<string>("userName")
                        .HasColumnType("TEXT");

                    b.Property<int>("winCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserActivityId");

                    b.HasIndex("UserExtendId");

                    b.HasIndex("UserOptionId");

                    b.HasIndex("UserRatingId");

                    b.ToTable("MaimaiDX_UserDetails");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserExtend", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("categoryIndex")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("extendContentBit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("extraFlag")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isGotoCodeRead")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isPhotoAgree")
                        .HasColumnType("INTEGER");

                    b.Property<int>("musicIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playStatusSetting")
                        .HasColumnType("INTEGER");

                    b.Property<int>("selectDifficultyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("selectMusicId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("selectResultDetails")
                        .HasColumnType("INTEGER");

                    b.Property<int>("selectResultScoreViewType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("selectScoreType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sortCategorySetting")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sortMusicSetting")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("MaimaiDX_UserExtends");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserFavorite", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("__itemId")
                        .HasColumnType("TEXT")
                        .HasColumnName("itemId");

                    b.Property<int>("itemKind")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserFavorites");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserFavoriteItem", b =>
                {
                    b.Property<int>("UserFavoriteItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "orderId");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("kind")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserFavoriteItemId");

                    b.HasIndex("UserDetailId");

                    b.HasIndex("UserFavoriteItemId");

                    b.ToTable("MaimaiDX_UserFavoriteItems");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserGamePlaylog", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("clientId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isEventMode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isNewFree")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isPlayTutorial")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playCredit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("playDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("playMode")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("playOtherUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playSpecial")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playTrack")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("playlogId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("useTicketId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("version")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserGamePlaylogs");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserItem", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isValid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("itemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("itemKind")
                        .HasColumnType("INTEGER");

                    b.Property<int>("stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserItems");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserLoginBonus", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("bonusId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isComplete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isCurrent")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("point")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserLoginBonuses");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserMap", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("distance")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isClear")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isComplete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isLock")
                        .HasColumnType("INTEGER");

                    b.Property<int>("mapId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserMaps");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserMusicDetail", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("achievement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("comboStatus")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("deluxscoreMax")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("extNum1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("musicId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("playCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("scoreRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("syncStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserMusicDetails");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserOption", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("adjustTiming")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ansVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("breakSe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("breakSlideVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("breakVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("brightness")
                        .HasColumnType("INTEGER");

                    b.Property<int>("criticalSe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("damageSeVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dispBar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dispCenter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dispChain")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dispJudge")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dispJudgePos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dispJudgeTouchPos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dispRate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("exSe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("exVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("headPhoneVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("holdDesign")
                        .HasColumnType("INTEGER");

                    b.Property<int>("judgeTiming")
                        .HasColumnType("INTEGER");

                    b.Property<int>("matching")
                        .HasColumnType("INTEGER");

                    b.Property<int>("mirrorMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("noteSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("noteSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("optionKind")
                        .HasColumnType("INTEGER");

                    b.Property<int>("outFrameType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("outlineDesign")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slideDesign")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slideSe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slideSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slideSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slideVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sortMusic")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sortTab")
                        .HasColumnType("INTEGER");

                    b.Property<int>("starRotate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("starType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("submonitorAchive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("submonitorAnimation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("submonitorAppeal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tapDesign")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tapHoldVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tapSe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchEffect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchHoldVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchVolume")
                        .HasColumnType("INTEGER");

                    b.Property<int>("trackSkip")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("MaimaiDX_UserOptions");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserPlaylog", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("achievement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("afterDeluxRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("afterGrade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("afterGradeRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("afterRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("beforeDeluxRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("beforeGrade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("beforeRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("breakCriticalPerfect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("breakGood")
                        .HasColumnType("INTEGER");

                    b.Property<int>("breakGreat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("breakMiss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("breakPerfect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterAwakening1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterAwakening2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterAwakening3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterAwakening4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterAwakening5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterId2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterId3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterId4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterId5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterLevel1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterLevel2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterLevel3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterLevel4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterLevel5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("comboStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("deluxscore")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("extBool1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("extNum1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("extNum2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("extNum4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("fastCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("holdCriticalPerfect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("holdGood")
                        .HasColumnType("INTEGER");

                    b.Property<int>("holdGreat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("holdMiss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("holdPerfect")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isAchieveNewRecord")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isBreak")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isClear")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isCriticalDisp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDeluxscoreNewRecord")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isEventMode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isFastLateDisp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isFreedomMode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isHold")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isNewFree")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isPlayTutorial")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isSlide")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isTap")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isTouch")
                        .HasColumnType("INTEGER");

                    b.Property<int>("lateCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<long>("loginDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxCombo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxSync")
                        .HasColumnType("INTEGER");

                    b.Property<int>("musicId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("orderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("placeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("placeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("playDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("playMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playedMusicLevel1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playedMusicLevel2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playedMusicLevel3")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("playedUserId1")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("playedUserId2")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("playedUserId3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("playedUserName1")
                        .HasColumnType("TEXT");

                    b.Property<string>("playedUserName2")
                        .HasColumnType("TEXT");

                    b.Property<string>("playedUserName3")
                        .HasColumnType("TEXT");

                    b.Property<int>("playerNum")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("playlogId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("scoreRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slideCriticalPerfect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slideGood")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slideGreat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slideMiss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("slidePerfect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("syncStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tapCriticalPerfect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tapGood")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tapGreat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tapMiss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tapPerfect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalCombo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalSync")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchCriticalPerfect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchGood")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchGreat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchMiss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("touchPerfect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("trackNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("trialPlayAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("type")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("userId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("userPlayDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("version")
                        .HasColumnType("INTEGER");

                    b.Property<int>("vsMode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("vsRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("vsStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("vsUserAchievement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("vsUserGradeRank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("vsUserName")
                        .HasColumnType("TEXT");

                    b.Property<int>("vsUserRating")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserPlaylogs");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserRate", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserRatingId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserRatingId1")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserRatingId2")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserRatingId3")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("achievement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("musicId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("romVersion")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserRatingId");

                    b.HasIndex("UserRatingId1");

                    b.HasIndex("UserRatingId2");

                    b.HasIndex("UserRatingId3");

                    b.ToTable("MaimaiDX_UserRates");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserRating", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("rating")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("udemaeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("udemaeId");

                    b.ToTable("MaimaiDX_UserRatings");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserRegion", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("created")
                        .HasColumnType("TEXT");

                    b.Property<int>("playCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("regionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserRegions");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserScoreRanking", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ranking")
                        .HasColumnType("INTEGER");

                    b.Property<string>("rankingDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("totalScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tournamentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("MaimaiDX_UserScoreRankings");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserUdemae", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("classValue")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("loseNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxClassValue")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("maxLoseNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxRate")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("maxWinNum")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("npcLoseNum")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("npcMaxLoseNum")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("npcMaxWinNum")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("npcTotalLoseNum")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("npcTotalWinNum")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("npcWinNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("rate")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("totalLoseNum")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("totalWinNum")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("winNum")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("MaimaiDX_UserUdemaes");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Responses.UserFriendSeasonRanking", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserFriendSeasonRankings")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.User2pPlaylogDetail", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", "UserDetail1")
                        .WithMany()
                        .HasForeignKey("UserDetail1Id");

                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", "UserDetail2")
                        .WithMany()
                        .HasForeignKey("UserDetail2Id");

                    b.Navigation("UserDetail1");

                    b.Navigation("UserDetail2");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserAct", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserActivity", null)
                        .WithMany("musicList")
                        .HasForeignKey("UserActivityId");

                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserActivity", null)
                        .WithMany("playList")
                        .HasForeignKey("UserActivityId1");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserCard", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserCards")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserCharacter", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserCharacters")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserCharge", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserCharges")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserChargelog", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserChargelogs")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserCourse", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserCourses")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserActivity", "UserActivity")
                        .WithMany()
                        .HasForeignKey("UserActivityId");

                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserExtend", "UserExtend")
                        .WithMany()
                        .HasForeignKey("UserExtendId");

                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserOption", "UserOption")
                        .WithMany()
                        .HasForeignKey("UserOptionId");

                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserRating", "UserRating")
                        .WithMany()
                        .HasForeignKey("UserRatingId");

                    b.Navigation("UserActivity");

                    b.Navigation("UserExtend");

                    b.Navigation("UserOption");

                    b.Navigation("UserRating");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserFavorite", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserFavorites")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserFavoriteItem", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserFavoriteItems")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserGamePlaylog", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserGamePlaylogs")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserItem", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserItems")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserLoginBonus", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserLoginBonuses")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserMap", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserMaps")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserMusicDetail", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserMusicDetails")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserPlaylog", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserPlaylogs")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserRate", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserRating", null)
                        .WithMany("newRatingList")
                        .HasForeignKey("UserRatingId");

                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserRating", null)
                        .WithMany("nextNewRatingList")
                        .HasForeignKey("UserRatingId1");

                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserRating", null)
                        .WithMany("nextRatingList")
                        .HasForeignKey("UserRatingId2");

                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserRating", null)
                        .WithMany("ratingList")
                        .HasForeignKey("UserRatingId3");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserRating", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserUdemae", "udemae")
                        .WithMany()
                        .HasForeignKey("udemaeId");

                    b.Navigation("udemae");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserRegion", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserRegions")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserScoreRanking", b =>
                {
                    b.HasOne("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", null)
                        .WithMany("UserScoreRankings")
                        .HasForeignKey("UserDetailId");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserActivity", b =>
                {
                    b.Navigation("musicList");

                    b.Navigation("playList");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserDetail", b =>
                {
                    b.Navigation("UserCards");

                    b.Navigation("UserCharacters");

                    b.Navigation("UserChargelogs");

                    b.Navigation("UserCharges");

                    b.Navigation("UserCourses");

                    b.Navigation("UserFavoriteItems");

                    b.Navigation("UserFavorites");

                    b.Navigation("UserFriendSeasonRankings");

                    b.Navigation("UserGamePlaylogs");

                    b.Navigation("UserItems");

                    b.Navigation("UserLoginBonuses");

                    b.Navigation("UserMaps");

                    b.Navigation("UserMusicDetails");

                    b.Navigation("UserPlaylogs");

                    b.Navigation("UserRegions");

                    b.Navigation("UserScoreRankings");
                });

            modelBuilder.Entity("Aminos.Core.Models.Title.SDEZ.Tables.UserRating", b =>
                {
                    b.Navigation("newRatingList");

                    b.Navigation("nextNewRatingList");

                    b.Navigation("nextRatingList");

                    b.Navigation("ratingList");
                });
#pragma warning restore 612, 618
        }
    }
}
